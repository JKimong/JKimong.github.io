(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{515:function(t,s,i){"use strict";i.r(s);var a=i(7),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,i=t._self._c||s;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("h2",{attrs:{id:"axios"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#axios"}},[t._v("#")]),t._v(" Axios")]),t._v(" "),i("div",{staticClass:"custom-block tip"},[i("p",{staticClass:"title"}),i("p",[i("strong",[t._v("Axios")]),t._v("是一个异步请求技术，核心作用就是用来在页面中发送异步请求，并获取对应的数据在页面中渲染。")])]),i("p",[t._v("axios 是一个基于Promise 用于浏览器和 nodejs 的 HTTP 客户端，本质上也是对原生XHR的封装，只不过它是Promise的实现版本，符合最新的ES规范，有以下特点：")]),t._v(" "),i("h3",{attrs:{id:"特性"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#特性"}},[t._v("#")]),t._v(" 特性")]),t._v(" "),i("ul",[i("li",[t._v("从浏览器中创建 XMLHttpRequests")]),t._v(" "),i("li",[t._v("从 node.js 创建 http 请求")]),t._v(" "),i("li",[t._v("支持 Promise API")]),t._v(" "),i("li",[t._v("拦截请求和响应")]),t._v(" "),i("li",[t._v("转换请求数据和响应数据")]),t._v(" "),i("li",[t._v("取消请求")]),t._v(" "),i("li",[t._v("自动转换 JSON 数据")]),t._v(" "),i("li",[t._v("客户端支持防御 XSRF")])])])}),[],!1,null,null,null);s.default=e.exports}}]);